/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.tcd.telas;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author MarcosVinicius
 */
public class AjudaNovo extends javax.swing.JFrame {

	private static final long serialVersionUID = 4928785457809363516L;

	/**
	 * Creates new form AjudaNovo
	 */
	public AjudaNovo() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		modeloEurocode = new javax.swing.JButton();
		elementosMadeira = new javax.swing.JButton();
		tccEscrito = new javax.swing.JButton();
		normasUtilizadas = new javax.swing.JButton();
		ajuda = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Ajuda - TCD");
		addWindowListener(new java.awt.event.WindowAdapter(){
			public void windowClosed(java.awt.event.WindowEvent evt) {
				FecharAjuda(evt);
			}

			public void windowDeactivated(java.awt.event.WindowEvent evt) {
				FecharAjuda(evt);
			}
		});

		modeloEurocode.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
		modeloEurocode.setText("Roteiros de Dimensionamento");
		modeloEurocode.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ModeloEurocodeActionPerformed(evt);
			}
		});

		elementosMadeira.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
		elementosMadeira.setText("Manual de Uso do Software");
		elementosMadeira.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ElementosMadeiraActionPerformed(evt);
			}
		});

		tccEscrito.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
		tccEscrito.setText("Limitações");
		tccEscrito.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				TccEscritoActionPerformed(evt);
			}
		});

		normasUtilizadas.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
		normasUtilizadas.setText("Normas utilizadas");
		normasUtilizadas.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				NormasUtilizadasActionPerformed(evt);
			}
		});

		ajuda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
		ajuda.setText("Consulte o item desejado:");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		        .addGroup(layout.createSequentialGroup()
		                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(128, 128, 128).addComponent(ajuda))
		                        .addGroup(layout.createSequentialGroup().addGap(100, 100, 100)
		                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
		                                        .addComponent(normasUtilizadas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                        .addComponent(elementosMadeira, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                        .addComponent(modeloEurocode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                        .addComponent(tccEscrito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
		                .addContainerGap(77, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		        .addGroup(layout.createSequentialGroup().addGap(26, 26, 26).addComponent(ajuda).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
		                .addComponent(tccEscrito).addGap(28, 28, 28).addComponent(modeloEurocode).addGap(27, 27, 27).addComponent(elementosMadeira).addGap(26, 26, 26).addComponent(normasUtilizadas)
		                .addGap(30, 30, 30)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void FecharAjuda(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FecharAjuda
		this.dispose();
	}//GEN-LAST:event_FecharAjuda

	private void ModeloEurocodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModeloEurocodeActionPerformed
		RoteirosDimensionamento roteiro = new RoteirosDimensionamento();
		roteiro.setVisible(true);
	}//GEN-LAST:event_ModeloEurocodeActionPerformed

	private void ElementosMadeiraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElementosMadeiraActionPerformed
		if(!Desktop.isDesktopSupported()) {
			System.out.println("Desktop is not supported");
			return;
		}

		Desktop desktop = Desktop.getDesktop();

		//let's try to open PDF file
		String basePath = new File("").getAbsolutePath();
		System.out.println(basePath + "<-ESSE É O CAMINHO PARA O PROJETO");
		File file = new File(basePath + "\\ajuda/ManualUsuario.pdf");
		if(file.exists()) {

			try {
				desktop.open(file);
			} catch (IOException ex) {
				Logger.getLogger(RoteirosDimensionamento.class.getName()).log(Level.SEVERE, null, ex);
			}
			System.out.println("SUCESSO!");
		}
	}//GEN-LAST:event_ElementosMadeiraActionPerformed

	private void NormasUtilizadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NormasUtilizadasActionPerformed
		if(!Desktop.isDesktopSupported()) {
			System.out.println("Desktop is not supported");
			return;
		}

		Desktop desktop = Desktop.getDesktop();

		//let's try to open PDF file
		String basePath = new File("").getAbsolutePath();
		System.out.println(basePath + "<-ESSE É O CAMINHO PARA O PROJETO");
		File file = new File(basePath + "\\ajuda/NormasUtilizadas.pdf");
		if(file.exists()) {

			try {
				desktop.open(file);
			} catch (IOException ex) {
				Logger.getLogger(RoteirosDimensionamento.class.getName()).log(Level.SEVERE, null, ex);
			}
			System.out.println("SUCESSO!");
		}
	}//GEN-LAST:event_NormasUtilizadasActionPerformed

	private void TccEscritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TccEscritoActionPerformed
		if(!Desktop.isDesktopSupported()) {
			System.out.println("Desktop is not supported");
			return;
		}

		Desktop desktop = Desktop.getDesktop();

		//let's try to open PDF file
		String basePath = new File("").getAbsolutePath();
		System.out.println(basePath + "<-ESSE É O CAMINHO PARA O PROJETO");
		File file = new File(basePath + "\\ajuda/LimitaçõesDoSoftware.pdf");
		if(file.exists()) {

			try {
				desktop.open(file);
			} catch (IOException ex) {
				Logger.getLogger(RoteirosDimensionamento.class.getName()).log(Level.SEVERE, null, ex);
			}
			System.out.println("SUCESSO!");
		}
	}//GEN-LAST:event_TccEscritoActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		try {
			for(javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(AjudaNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(AjudaNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(AjudaNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(AjudaNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		java.awt.EventQueue.invokeLater(new Runnable(){
			public void run() {
				new AjudaNovo().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel ajuda;
	private javax.swing.JButton elementosMadeira;
	private javax.swing.JButton modeloEurocode;
	private javax.swing.JButton normasUtilizadas;
	private javax.swing.JButton tccEscrito;
	// End of variables declaration//GEN-END:variables
}
